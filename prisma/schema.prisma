generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique @db.VarChar(255)
  name        String   @db.VarChar(255)
  taxId       String?  @unique @db.VarChar(50)
  phoneNumber String?  @unique @db.VarChar(20)
  ownedStores Store[]  @relation("StoreOwner")
  adminStores Store[]  @relation("StoreAdmin")
}

model Store {
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(255)
  address   String  @db.Text
  owner     User?   @relation("StoreOwner", fields: [ownerId], references: [id], onDelete: SetNull)
  ownerId   Int?
  admin     User?   @relation("StoreAdmin", fields: [adminId], references: [id], onDelete: SetNull)
  adminId   Int?

  bills     Bill[]
}

model Bill {
  id          Int      @id @default(autoincrement())
  total       Decimal  @db.Decimal(10,2)
  orderDate   DateTime @default(now())
  shippingOn  DateTime?
  status      Status

  store       Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  storeId     Int
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId  Int
  items       BillItem[]
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String  @db.VarChar(255)
  address String  @db.Text

  bills   Bill[]
}

model Item {
  id     Int     @id @default(autoincrement())
  name   String  @db.VarChar(255)
  price  Decimal @db.Decimal(10,2)

  bills  BillItem[]
}

model BillItem {
  bill     Bill    @relation(fields: [billId], references: [id], onDelete: Cascade)
  billId   Int
  item     Item    @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId   Int
  quantity Int     @default(1)

  @@id([billId, itemId])
}

enum Status {
  unpaid
  paid
}